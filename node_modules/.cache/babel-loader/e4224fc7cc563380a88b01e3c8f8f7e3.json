{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { ClientAuthError } from \"./ClientAuthError\";\nexport var ClientConfigurationErrorMessage = {\n  configurationNotSet: {\n    code: \"no_config_set\",\n    desc: \"Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object.\"\n  },\n  storageNotSupported: {\n    code: \"storage_not_supported\",\n    desc: \"The value for the cacheLocation is not supported.\"\n  },\n  noRedirectCallbacksSet: {\n    code: \"no_redirect_callbacks\",\n    desc: \"No redirect callbacks have been set. Please call handleRedirectCallback() with the appropriate function arguments before continuing. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  invalidCallbackObject: {\n    code: \"invalid_callback_object\",\n    desc: \"The object passed for the callback was invalid. \" + \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n  },\n  scopesRequired: {\n    code: \"scopes_required\",\n    desc: \"Scopes are required to obtain an access token.\"\n  },\n  emptyScopes: {\n    code: \"empty_input_scopes_error\",\n    desc: \"Scopes cannot be passed as empty array.\"\n  },\n  nonArrayScopes: {\n    code: \"nonarray_input_scopes_error\",\n    desc: \"Scopes cannot be passed as non-array.\"\n  },\n  clientScope: {\n    code: \"clientid_input_scopes_error\",\n    desc: \"Client ID can only be provided as a single scope.\"\n  },\n  invalidPrompt: {\n    code: \"invalid_prompt_value\",\n    desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'\"\n  },\n  invalidAuthorityType: {\n    code: \"invalid_authority_type\",\n    desc: \"The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>.\"\n  },\n  authorityUriInsecure: {\n    code: \"authority_uri_insecure\",\n    desc: \"Authority URIs must use https.\"\n  },\n  authorityUriInvalidPath: {\n    code: \"authority_uri_invalid_path\",\n    desc: \"Given authority URI is invalid.\"\n  },\n  unsupportedAuthorityValidation: {\n    code: \"unsupported_authority_validation\",\n    desc: \"The authority validation is not supported for this authority type.\"\n  },\n  b2cAuthorityUriInvalidPath: {\n    code: \"b2c_authority_uri_invalid_path\",\n    desc: \"The given URI for the B2C authority is invalid.\"\n  },\n  claimsRequestParsingError: {\n    code: \"claims_request_parsing_error\",\n    desc: \"Could not parse the given claims request object.\"\n  },\n  emptyRequestError: {\n    code: \"empty_request_error\",\n    desc: \"Request object is required.\"\n  },\n  invalidCorrelationIdError: {\n    code: \"invalid_guid_sent_as_correlationId\",\n    desc: \"Please set the correlationId as a valid guid\"\n  },\n  telemetryConfigError: {\n    code: \"telemetry_config_error\",\n    desc: \"Telemetry config is not configured with required values\"\n  }\n};\n/**\n * Error thrown when there is an error in configuration of the .js library.\n */\n\nvar ClientConfigurationError =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ClientConfigurationError, _super);\n\n  function ClientConfigurationError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"ClientConfigurationError\";\n    Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\n    return _this;\n  }\n\n  ClientConfigurationError.createNoSetConfigurationError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code, \"\" + ClientConfigurationErrorMessage.configurationNotSet.desc);\n  };\n\n  ClientConfigurationError.createStorageNotSupportedError = function (givenCacheLocation) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.storageNotSupported.code, ClientConfigurationErrorMessage.storageNotSupported.desc + \" Given location: \" + givenCacheLocation);\n  };\n\n  ClientConfigurationError.createRedirectCallbacksNotSetError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);\n  };\n\n  ClientConfigurationError.createInvalidCallbackObjectError = function (callbackObject) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code, ClientConfigurationErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\n  };\n\n  ClientConfigurationError.createEmptyScopesArrayError = function (scopesValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code, ClientConfigurationErrorMessage.emptyScopes.desc + \" Given value: \" + scopesValue + \".\");\n  };\n\n  ClientConfigurationError.createScopesNonArrayError = function (scopesValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code, ClientConfigurationErrorMessage.nonArrayScopes.desc + \" Given value: \" + scopesValue + \".\");\n  };\n\n  ClientConfigurationError.createClientIdSingleScopeError = function (scopesValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.clientScope.code, ClientConfigurationErrorMessage.clientScope.desc + \" Given value: \" + scopesValue + \".\");\n  };\n\n  ClientConfigurationError.createScopesRequiredError = function (scopesValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code, ClientConfigurationErrorMessage.scopesRequired.desc + \" Given value: \" + scopesValue);\n  };\n\n  ClientConfigurationError.createInvalidPromptError = function (promptValue) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\n  };\n\n  ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\n  };\n\n  ClientConfigurationError.createEmptyRequestError = function () {\n    var _a = ClientConfigurationErrorMessage.emptyRequestError,\n        code = _a.code,\n        desc = _a.desc;\n    return new ClientConfigurationError(code, desc);\n  };\n\n  ClientConfigurationError.createInvalidCorrelationIdError = function () {\n    return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCorrelationIdError.code, ClientConfigurationErrorMessage.invalidCorrelationIdError.desc);\n  };\n\n  ClientConfigurationError.createTelemetryConfigError = function (config) {\n    var _a = ClientConfigurationErrorMessage.telemetryConfigError,\n        code = _a.code,\n        desc = _a.desc;\n    var requiredKeys = {\n      applicationName: \"string\",\n      applicationVersion: \"string\",\n      telemetryEmitter: \"function\"\n    };\n    var missingKeys = Object.keys(requiredKeys).reduce(function (keys, key) {\n      return config[key] ? keys : keys.concat([key + \" (\" + requiredKeys[key] + \")\"]);\n    }, []);\n    return new ClientConfigurationError(code, desc + \" mising values: \" + missingKeys.join(\",\"));\n  };\n\n  return ClientConfigurationError;\n}(ClientAuthError);\n\nexport { ClientConfigurationError };","map":{"version":3,"sources":["../../src/error/ClientConfigurationError.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport * as tslib_1 from \"tslib\";\nimport { ClientAuthError } from \"./ClientAuthError\";\nexport var ClientConfigurationErrorMessage = {\n    configurationNotSet: {\n        code: \"no_config_set\",\n        desc: \"Configuration has not been set. Please call the UserAgentApplication constructor with a valid Configuration object.\"\n    },\n    storageNotSupported: {\n        code: \"storage_not_supported\",\n        desc: \"The value for the cacheLocation is not supported.\"\n    },\n    noRedirectCallbacksSet: {\n        code: \"no_redirect_callbacks\",\n        desc: \"No redirect callbacks have been set. Please call handleRedirectCallback() with the appropriate function arguments before continuing. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    invalidCallbackObject: {\n        code: \"invalid_callback_object\",\n        desc: \"The object passed for the callback was invalid. \" +\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\n    },\n    scopesRequired: {\n        code: \"scopes_required\",\n        desc: \"Scopes are required to obtain an access token.\"\n    },\n    emptyScopes: {\n        code: \"empty_input_scopes_error\",\n        desc: \"Scopes cannot be passed as empty array.\"\n    },\n    nonArrayScopes: {\n        code: \"nonarray_input_scopes_error\",\n        desc: \"Scopes cannot be passed as non-array.\"\n    },\n    clientScope: {\n        code: \"clientid_input_scopes_error\",\n        desc: \"Client ID can only be provided as a single scope.\"\n    },\n    invalidPrompt: {\n        code: \"invalid_prompt_value\",\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'\",\n    },\n    invalidAuthorityType: {\n        code: \"invalid_authority_type\",\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please see here for valid authorities: <insert URL here>.\"\n    },\n    authorityUriInsecure: {\n        code: \"authority_uri_insecure\",\n        desc: \"Authority URIs must use https.\"\n    },\n    authorityUriInvalidPath: {\n        code: \"authority_uri_invalid_path\",\n        desc: \"Given authority URI is invalid.\"\n    },\n    unsupportedAuthorityValidation: {\n        code: \"unsupported_authority_validation\",\n        desc: \"The authority validation is not supported for this authority type.\"\n    },\n    b2cAuthorityUriInvalidPath: {\n        code: \"b2c_authority_uri_invalid_path\",\n        desc: \"The given URI for the B2C authority is invalid.\"\n    },\n    claimsRequestParsingError: {\n        code: \"claims_request_parsing_error\",\n        desc: \"Could not parse the given claims request object.\"\n    },\n    emptyRequestError: {\n        code: \"empty_request_error\",\n        desc: \"Request object is required.\"\n    },\n    invalidCorrelationIdError: {\n        code: \"invalid_guid_sent_as_correlationId\",\n        desc: \"Please set the correlationId as a valid guid\"\n    },\n    telemetryConfigError: {\n        code: \"telemetry_config_error\",\n        desc: \"Telemetry config is not configured with required values\"\n    }\n};\n/**\n * Error thrown when there is an error in configuration of the .js library.\n */\nvar ClientConfigurationError = /** @class */ (function (_super) {\n    tslib_1.__extends(ClientConfigurationError, _super);\n    function ClientConfigurationError(errorCode, errorMessage) {\n        var _this = _super.call(this, errorCode, errorMessage) || this;\n        _this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\n        return _this;\n    }\n    ClientConfigurationError.createNoSetConfigurationError = function () {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.configurationNotSet.code, \"\" + ClientConfigurationErrorMessage.configurationNotSet.desc);\n    };\n    ClientConfigurationError.createStorageNotSupportedError = function (givenCacheLocation) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.storageNotSupported.code, ClientConfigurationErrorMessage.storageNotSupported.desc + \" Given location: \" + givenCacheLocation);\n    };\n    ClientConfigurationError.createRedirectCallbacksNotSetError = function () {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.noRedirectCallbacksSet.code, ClientConfigurationErrorMessage.noRedirectCallbacksSet.desc);\n    };\n    ClientConfigurationError.createInvalidCallbackObjectError = function (callbackObject) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCallbackObject.code, ClientConfigurationErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\n    };\n    ClientConfigurationError.createEmptyScopesArrayError = function (scopesValue) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopes.code, ClientConfigurationErrorMessage.emptyScopes.desc + \" Given value: \" + scopesValue + \".\");\n    };\n    ClientConfigurationError.createScopesNonArrayError = function (scopesValue) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopes.code, ClientConfigurationErrorMessage.nonArrayScopes.desc + \" Given value: \" + scopesValue + \".\");\n    };\n    ClientConfigurationError.createClientIdSingleScopeError = function (scopesValue) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientScope.code, ClientConfigurationErrorMessage.clientScope.desc + \" Given value: \" + scopesValue + \".\");\n    };\n    ClientConfigurationError.createScopesRequiredError = function (scopesValue) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.scopesRequired.code, ClientConfigurationErrorMessage.scopesRequired.desc + \" Given value: \" + scopesValue);\n    };\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\n    };\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\n    };\n    ClientConfigurationError.createEmptyRequestError = function () {\n        var _a = ClientConfigurationErrorMessage.emptyRequestError, code = _a.code, desc = _a.desc;\n        return new ClientConfigurationError(code, desc);\n    };\n    ClientConfigurationError.createInvalidCorrelationIdError = function () {\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCorrelationIdError.code, ClientConfigurationErrorMessage.invalidCorrelationIdError.desc);\n    };\n    ClientConfigurationError.createTelemetryConfigError = function (config) {\n        var _a = ClientConfigurationErrorMessage.telemetryConfigError, code = _a.code, desc = _a.desc;\n        var requiredKeys = {\n            applicationName: \"string\",\n            applicationVersion: \"string\",\n            telemetryEmitter: \"function\"\n        };\n        var missingKeys = Object.keys(requiredKeys)\n            .reduce(function (keys, key) {\n            return config[key] ? keys : keys.concat([key + \" (\" + requiredKeys[key] + \")\"]);\n        }, []);\n        return new ClientConfigurationError(code, desc + \" mising values: \" + missingKeys.join(\",\"));\n    };\n    return ClientConfigurationError;\n}(ClientAuthError));\nexport { ClientConfigurationError };\n//# sourceMappingURL=ClientConfigurationError.js.map"]},"metadata":{},"sourceType":"module"}