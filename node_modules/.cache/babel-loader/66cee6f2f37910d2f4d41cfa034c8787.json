{"ast":null,"code":"var graph = require('@microsoft/microsoft-graph-client');\n\nfunction getAuthenticatedClient(accessToken) {\n  // Initialize Graph client\n  const client = graph.Client.init({\n    // Use the provided access token to authenticate\n    // requests\n    authProvider: done => {\n      done(null, accessToken);\n    }\n  });\n  return client;\n}\n\nexport async function getEvents(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n  const events = await client.api('/me/events').select('subject,organizer,start,end').orderby('createdDateTime DESC').get();\n  return events;\n}\nexport async function getUserDetails(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n  const user = await client.api('/me').get();\n  return user;\n}\nexport async function createUser(accessToken, user) {\n  const client = getAuthenticatedClient(accessToken);\n  let res = await client.api('/users').post(user);\n  return res;\n}\nexport async function getUser(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n  let res = await client.api('/users').get();\n  return res;\n}\nexport async function deleteUser(accessToken, id) {\n  const client = getAuthenticatedClient(accessToken);\n  let res = await client.api(`/users/${id}`).delete().then(res => res);\n  ;\n  return res;\n}\nexport async function updateUser(accessToken, user) {\n  const client = getAuthenticatedClient(accessToken);\n  await client.api('/users/{id}').update(user).then(res => res); //return res;\n}","map":{"version":3,"sources":["D:/Assignment/graph-tutorial/src/GraphService.ts"],"names":["graph","require","getAuthenticatedClient","accessToken","client","Client","init","authProvider","done","getEvents","events","api","select","orderby","get","getUserDetails","user","createUser","res","post","getUser","deleteUser","id","delete","then","updateUser","update"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mCAAD,CAAnB;;AAEA,SAASC,sBAAT,CAAgCC,WAAhC,EAAqD;AACnD;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkB;AAC/B;AACA;AACAC,IAAAA,YAAY,EAAGC,IAAD,IAAe;AAC3BA,MAAAA,IAAI,CAAC,IAAD,EAAOL,WAAP,CAAJ;AACD;AAL8B,GAAlB,CAAf;AAQA,SAAOC,MAAP;AACD;;AAED,OAAO,eAAeK,SAAf,CAAyBN,WAAzB,EAA8C;AACjD,QAAMC,MAAM,GAAGF,sBAAsB,CAACC,WAAD,CAArC;AAEA,QAAMO,MAAM,GAAG,MAAMN,MAAM,CACxBO,GADkB,CACd,YADc,EAElBC,MAFkB,CAEX,6BAFW,EAGlBC,OAHkB,CAGV,sBAHU,EAIlBC,GAJkB,EAArB;AAMA,SAAOJ,MAAP;AACD;AAEH,OAAO,eAAeK,cAAf,CAA8BZ,WAA9B,EAAmD;AACxD,QAAMC,MAAM,GAAGF,sBAAsB,CAACC,WAAD,CAArC;AAEA,QAAMa,IAAI,GAAG,MAAMZ,MAAM,CAACO,GAAP,CAAW,KAAX,EAAkBG,GAAlB,EAAnB;AACA,SAAOE,IAAP;AACD;AAED,OAAO,eAAeC,UAAf,CAA0Bd,WAA1B,EAA6Ca,IAA7C,EAAsD;AAC3D,QAAMZ,MAAM,GAAGF,sBAAsB,CAACC,WAAD,CAArC;AACA,MAAIe,GAAG,GAAG,MAAMd,MAAM,CAACO,GAAP,CAAW,QAAX,EAAqBQ,IAArB,CAA0BH,IAA1B,CAAhB;AACA,SAAOE,GAAP;AACD;AAGD,OAAO,eAAeE,OAAf,CAAuBjB,WAAvB,EAA0C;AAC/C,QAAMC,MAAM,GAAGF,sBAAsB,CAACC,WAAD,CAArC;AACA,MAAIe,GAAG,GAAG,MAAMd,MAAM,CAACO,GAAP,CAAW,QAAX,EAAqBG,GAArB,EAAhB;AACA,SAAOI,GAAP;AACD;AAED,OAAO,eAAeG,UAAf,CAA0BlB,WAA1B,EAA6CmB,EAA7C,EAAoD;AACzD,QAAMlB,MAAM,GAAGF,sBAAsB,CAACC,WAAD,CAArC;AACA,MAAIe,GAAG,GAAG,MAAMd,MAAM,CAACO,GAAP,CAAY,UAASW,EAAG,EAAxB,EAA2BC,MAA3B,GACfC,IADe,CACTN,GAAD,IAAaA,GADH,CAAhB;AACwB;AACxB,SAAOA,GAAP;AACD;AAED,OAAO,eAAeO,UAAf,CAA0BtB,WAA1B,EAA6Ca,IAA7C,EAAsD;AAC3D,QAAMZ,MAAM,GAAGF,sBAAsB,CAACC,WAAD,CAArC;AACC,QAAMC,MAAM,CAACO,GAAP,CAAW,aAAX,EAA0Be,MAA1B,CAAiCV,IAAjC,EACQQ,IADR,CACcN,GAAD,IAAaA,GAD1B,CAAN,CAF0D,CAI3D;AACD","sourcesContent":["var graph = require('@microsoft/microsoft-graph-client');\r\n\r\nfunction getAuthenticatedClient(accessToken: string) {\r\n  // Initialize Graph client\r\n  const client = graph.Client.init({\r\n    // Use the provided access token to authenticate\r\n    // requests\r\n    authProvider: (done: any) => {\r\n      done(null, accessToken);\r\n    }\r\n  });\r\n\r\n  return client;\r\n}\r\n\r\nexport async function getEvents(accessToken: string) {\r\n    const client = getAuthenticatedClient(accessToken);\r\n  \r\n    const events = await client\r\n      .api('/me/events')\r\n      .select('subject,organizer,start,end')\r\n      .orderby('createdDateTime DESC')\r\n      .get();\r\n  \r\n    return events;\r\n  }\r\n  \r\nexport async function getUserDetails(accessToken: string) {\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  const user = await client.api('/me').get();\r\n  return user;\r\n}\r\n\r\nexport async function createUser(accessToken:string,user:any){\r\n  const client = getAuthenticatedClient(accessToken);\r\n  let res = await client.api('/users').post(user);\r\n  return res;\r\n}\r\n\r\n\r\nexport async function getUser(accessToken:string){\r\n  const client = getAuthenticatedClient(accessToken);\r\n  let res = await client.api('/users').get();\r\n  return res;\r\n}\r\n\r\nexport async function deleteUser(accessToken:string,id:any){\r\n  const client = getAuthenticatedClient(accessToken);\r\n  let res = await client.api(`/users/${id}`).delete()\r\n  .then((res:any) => res);;\r\n  return res;\r\n}\r\n\r\nexport async function updateUser(accessToken:string,user:any){\r\n  const client = getAuthenticatedClient(accessToken);\r\n   await client.api('/users/{id}').update(user)\r\n                .then((res:any) => res);\r\n  //return res;\r\n}"]},"metadata":{},"sourceType":"module"}