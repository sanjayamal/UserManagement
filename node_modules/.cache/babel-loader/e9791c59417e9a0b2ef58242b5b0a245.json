{"ast":null,"code":"var graph = require('@microsoft/microsoft-graph-client');\n\nfunction getAuthenticatedClient(accessToken) {\n  // Initialize Graph client\n  const client = graph.Client.init({\n    // Use the provided access token to authenticate\n    // requests\n    authProvider: done => {\n      done(null, accessToken);\n    }\n  });\n  return client;\n}\n\nexport async function getEvents(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n  const events = await client.api('/me/events').select('subject,organizer,start,end').orderby('createdDateTime DESC').get();\n  return events;\n}\nexport async function getUserDetails(accessToken) {\n  const client = getAuthenticatedClient(accessToken);\n  const user = await client.api('/me').get();\n  return user;\n}\nexport async function createUser(accessToken) {}","map":{"version":3,"sources":["D:/Assignment/graph-tutorial/src/GraphService.ts"],"names":["graph","require","getAuthenticatedClient","accessToken","client","Client","init","authProvider","done","getEvents","events","api","select","orderby","get","getUserDetails","user","createUser"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mCAAD,CAAnB;;AAEA,SAASC,sBAAT,CAAgCC,WAAhC,EAAqD;AACnD;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkB;AAC/B;AACA;AACAC,IAAAA,YAAY,EAAGC,IAAD,IAAe;AAC3BA,MAAAA,IAAI,CAAC,IAAD,EAAOL,WAAP,CAAJ;AACD;AAL8B,GAAlB,CAAf;AAQA,SAAOC,MAAP;AACD;;AAED,OAAO,eAAeK,SAAf,CAAyBN,WAAzB,EAA8C;AACjD,QAAMC,MAAM,GAAGF,sBAAsB,CAACC,WAAD,CAArC;AAEA,QAAMO,MAAM,GAAG,MAAMN,MAAM,CACxBO,GADkB,CACd,YADc,EAElBC,MAFkB,CAEX,6BAFW,EAGlBC,OAHkB,CAGV,sBAHU,EAIlBC,GAJkB,EAArB;AAMA,SAAOJ,MAAP;AACD;AAEH,OAAO,eAAeK,cAAf,CAA8BZ,WAA9B,EAAmD;AACxD,QAAMC,MAAM,GAAGF,sBAAsB,CAACC,WAAD,CAArC;AAEA,QAAMa,IAAI,GAAG,MAAMZ,MAAM,CAACO,GAAP,CAAW,KAAX,EAAkBG,GAAlB,EAAnB;AACA,SAAOE,IAAP;AACD;AAED,OAAO,eAAeC,UAAf,CAA0Bd,WAA1B,EAA6C,CAEnD","sourcesContent":["var graph = require('@microsoft/microsoft-graph-client');\r\n\r\nfunction getAuthenticatedClient(accessToken: string) {\r\n  // Initialize Graph client\r\n  const client = graph.Client.init({\r\n    // Use the provided access token to authenticate\r\n    // requests\r\n    authProvider: (done: any) => {\r\n      done(null, accessToken);\r\n    }\r\n  });\r\n\r\n  return client;\r\n}\r\n\r\nexport async function getEvents(accessToken: string) {\r\n    const client = getAuthenticatedClient(accessToken);\r\n  \r\n    const events = await client\r\n      .api('/me/events')\r\n      .select('subject,organizer,start,end')\r\n      .orderby('createdDateTime DESC')\r\n      .get();\r\n  \r\n    return events;\r\n  }\r\n  \r\nexport async function getUserDetails(accessToken: string) {\r\n  const client = getAuthenticatedClient(accessToken);\r\n\r\n  const user = await client.api('/me').get();\r\n  return user;\r\n}\r\n\r\nexport async function createUser(accessToken:string){\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}