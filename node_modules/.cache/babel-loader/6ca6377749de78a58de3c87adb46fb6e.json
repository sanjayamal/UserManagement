{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * XHR client for JSON endpoints\n * https://www.npmjs.com/package/async-promise\n * @hidden\n */\nvar XhrClient =\n/** @class */\nfunction () {\n  function XhrClient() {}\n\n  XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(method, url,\n      /* async: */\n      true);\n\n      if (enableCaching) {\n        /*\n         * TODO: (shivb) ensure that this can be cached\n         * xhr.setRequestHeader(\"Cache-Control\", \"Public\");\n         */\n      }\n\n      xhr.onload = function (ev) {\n        if (xhr.status < 200 || xhr.status >= 300) {\n          reject(_this.handleError(xhr.responseText));\n        }\n\n        var jsonResponse;\n\n        try {\n          jsonResponse = JSON.parse(xhr.responseText);\n        } catch (e) {\n          reject(_this.handleError(xhr.responseText));\n        }\n\n        resolve(jsonResponse);\n      };\n\n      xhr.onerror = function (ev) {\n        reject(xhr.status);\n      };\n\n      if (method === \"GET\") {\n        xhr.send();\n      } else {\n        throw \"not implemented\";\n      }\n    });\n  };\n\n  XhrClient.prototype.handleError = function (responseText) {\n    var jsonResponse;\n\n    try {\n      jsonResponse = JSON.parse(responseText);\n\n      if (jsonResponse.error) {\n        return jsonResponse.error;\n      } else {\n        throw responseText;\n      }\n    } catch (e) {\n      return responseText;\n    }\n  };\n\n  return XhrClient;\n}();\n\nexport { XhrClient };","map":{"version":3,"sources":["../src/XHRClient.ts"],"names":[],"mappings":"AAAA;;;;;AAKA;;;;;AAKA,IAAA,SAAA;AAAA;AAAA,YAAA;AAAA,WAAA,SAAA,GAAA,CAoDC;;AAnDU,EAAA,SAAA,CAAA,SAAA,CAAA,gBAAA,GAAP,UAAwB,GAAxB,EAAqC,MAArC,EAAqD,aAArD,EAA4E;AAA5E,QAAA,KAAA,GAAA,IAAA;;AACI,WAAO,IAAI,OAAJ,CAAoB,UAAC,OAAD,EAAU,MAAV,EAAgB;AACvC,UAAM,GAAG,GAAG,IAAI,cAAJ,EAAZ;AACA,MAAA,GAAG,CAAC,IAAJ,CAAS,MAAT,EAAiB,GAAjB;AAAsB;AAAa,UAAnC;;AACA,UAAI,aAAJ,EAAmB;AACf;;;;AAIH;;AAED,MAAA,GAAG,CAAC,MAAJ,GAAa,UAAC,EAAD,EAAG;AACZ,YAAI,GAAG,CAAC,MAAJ,GAAa,GAAb,IAAoB,GAAG,CAAC,MAAJ,IAAc,GAAtC,EAA2C;AACvC,UAAA,MAAM,CAAC,KAAI,CAAC,WAAL,CAAiB,GAAG,CAAC,YAArB,CAAD,CAAN;AACH;;AACD,YAAI,YAAJ;;AACA,YAAI;AACA,UAAA,YAAY,GAAG,IAAI,CAAC,KAAL,CAAW,GAAG,CAAC,YAAf,CAAf;AACH,SAFD,CAEE,OAAO,CAAP,EAAU;AACR,UAAA,MAAM,CAAC,KAAI,CAAC,WAAL,CAAiB,GAAG,CAAC,YAArB,CAAD,CAAN;AACH;;AAED,QAAA,OAAO,CAAC,YAAD,CAAP;AACH,OAZD;;AAcA,MAAA,GAAG,CAAC,OAAJ,GAAc,UAAC,EAAD,EAAG;AACb,QAAA,MAAM,CAAC,GAAG,CAAC,MAAL,CAAN;AACH,OAFD;;AAIA,UAAI,MAAM,KAAK,KAAf,EAAsB;AAClB,QAAA,GAAG,CAAC,IAAJ;AACH,OAFD,MAGK;AACD,cAAM,iBAAN;AACH;AACJ,KAlCM,CAAP;AAmCH,GApCM;;AAsCG,EAAA,SAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,YAAtB,EAA0C;AACtC,QAAI,YAAJ;;AACA,QAAI;AACA,MAAA,YAAY,GAAG,IAAI,CAAC,KAAL,CAAW,YAAX,CAAf;;AACA,UAAI,YAAY,CAAC,KAAjB,EAAwB;AACpB,eAAO,YAAY,CAAC,KAApB;AACH,OAFD,MAEO;AACH,cAAM,YAAN;AACH;AACJ,KAPD,CAOE,OAAO,CAAP,EAAU;AACR,aAAO,YAAP;AACH;AACJ,GAZS;;AAad,SAAA,SAAA;AAAC,CApDD,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * XHR client for JSON endpoints\n * https://www.npmjs.com/package/async-promise\n * @hidden\n */\nvar XhrClient = /** @class */ (function () {\n    function XhrClient() {\n    }\n    XhrClient.prototype.sendRequestAsync = function (url, method, enableCaching) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(method, url, /* async: */ true);\n            if (enableCaching) {\n                /*\n                 * TODO: (shivb) ensure that this can be cached\n                 * xhr.setRequestHeader(\"Cache-Control\", \"Public\");\n                 */\n            }\n            xhr.onload = function (ev) {\n                if (xhr.status < 200 || xhr.status >= 300) {\n                    reject(_this.handleError(xhr.responseText));\n                }\n                var jsonResponse;\n                try {\n                    jsonResponse = JSON.parse(xhr.responseText);\n                }\n                catch (e) {\n                    reject(_this.handleError(xhr.responseText));\n                }\n                resolve(jsonResponse);\n            };\n            xhr.onerror = function (ev) {\n                reject(xhr.status);\n            };\n            if (method === \"GET\") {\n                xhr.send();\n            }\n            else {\n                throw \"not implemented\";\n            }\n        });\n    };\n    XhrClient.prototype.handleError = function (responseText) {\n        var jsonResponse;\n        try {\n            jsonResponse = JSON.parse(responseText);\n            if (jsonResponse.error) {\n                return jsonResponse.error;\n            }\n            else {\n                throw responseText;\n            }\n        }\n        catch (e) {\n            return responseText;\n        }\n    };\n    return XhrClient;\n}());\nexport { XhrClient };\n//# sourceMappingURL=XHRClient.js.map"]},"metadata":{},"sourceType":"module"}