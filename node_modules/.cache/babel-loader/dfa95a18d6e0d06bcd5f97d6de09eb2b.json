{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignment\\\\graph-tutorial\\\\src\\\\Users.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { config } from './Config';\nimport { UserAgentApplication } from 'msal';\nimport { getUser } from './GraphService';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst User = () => {\n  const [users, setUser] = useState();\n  useEffect(() => {\n    getUserService();\n  }, []);\n  const {\n    values\n  } = users;\n  console.log(value);\n  const userAgentApplication = new UserAgentApplication({\n    auth: {\n      clientId: config.appId,\n      redirectUri: config.redirectUri\n    },\n    cache: {\n      cacheLocation: \"sessionStorage\",\n      storeAuthStateInCookie: true\n    }\n  });\n\n  const isInteractionRequired = error => {\n    if (!error.message || error.message.length <= 0) {\n      return false;\n    }\n\n    return error.message.indexOf('consent_required') > -1 || error.message.indexOf('interaction_required') > -1 || error.message.indexOf('login_required') > -1;\n  };\n\n  const getAccessToken = async scopes => {\n    try {\n      var silentResult = await userAgentApplication.acquireTokenSilent({\n        scopes: scopes\n      });\n      return silentResult.accessToken;\n    } catch (err) {\n      // If a silent request fails, it may be because the user needs\n      // to login or grant consent to one or more of the requested scopes\n      if (isInteractionRequired(err)) {\n        var interactiveResult = await userAgentApplication.acquireTokenPopup({\n          scopes: scopes\n        });\n        return interactiveResult.accessToken;\n      } else {\n        throw err;\n      }\n    }\n  };\n\n  const getUserService = async () => {\n    const accessToken = await getAccessToken(config.scopes);\n    getUser(accessToken).then(result => setUser(result));\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    onClick: getUserService,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"click\");\n};\n\nexport default User;","map":{"version":3,"sources":["D:/Assignment/graph-tutorial/src/Users.tsx"],"names":["React","useState","useEffect","config","UserAgentApplication","getUser","Button","User","users","setUser","getUserService","values","console","log","value","userAgentApplication","auth","clientId","appId","redirectUri","cache","cacheLocation","storeAuthStateInCookie","isInteractionRequired","error","message","length","indexOf","getAccessToken","scopes","silentResult","acquireTokenSilent","accessToken","err","interactiveResult","acquireTokenPopup","then","result"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,oBAAT,QAAqC,MAArC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAO,oBAAP;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEf,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBR,QAAQ,EAAjC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAaH,KAAnB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,QAAMC,oBAAoB,GAAG,IAAIX,oBAAJ,CAAyB;AAClDY,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAEd,MAAM,CAACe,KADf;AAEFC,MAAAA,WAAW,EAAEhB,MAAM,CAACgB;AAFlB,KAD4C;AAKlDC,IAAAA,KAAK,EAAE;AACHC,MAAAA,aAAa,EAAE,gBADZ;AAEHC,MAAAA,sBAAsB,EAAE;AAFrB;AAL2C,GAAzB,CAA7B;;AAWA,QAAMC,qBAAqB,GAAIC,KAAD,IAA2B;AACrD,QAAI,CAACA,KAAK,CAACC,OAAP,IAAkBD,KAAK,CAACC,OAAN,CAAcC,MAAd,IAAwB,CAA9C,EAAiD;AAC7C,aAAO,KAAP;AACH;;AAED,WACIF,KAAK,CAACC,OAAN,CAAcE,OAAd,CAAsB,kBAAtB,IAA4C,CAAC,CAA7C,IACAH,KAAK,CAACC,OAAN,CAAcE,OAAd,CAAsB,sBAAtB,IAAgD,CAAC,CADjD,IAEAH,KAAK,CAACC,OAAN,CAAcE,OAAd,CAAsB,gBAAtB,IAA0C,CAAC,CAH/C;AAKH,GAVD;;AAYA,QAAMC,cAAc,GAAG,MAAOC,MAAP,IAA4B;AAE/C,QAAI;AACA,UAAIC,YAAY,GAAG,MAAMf,oBAAoB,CAACgB,kBAArB,CAAwC;AAC7DF,QAAAA,MAAM,EAAEA;AADqD,OAAxC,CAAzB;AAGA,aAAOC,YAAY,CAACE,WAApB;AACH,KALD,CAKE,OAAOC,GAAP,EAAY;AACV;AACA;AACA,UAAIV,qBAAqB,CAACU,GAAD,CAAzB,EAAgC;AAC5B,YAAIC,iBAAiB,GAAG,MAAMnB,oBAAoB,CAACoB,iBAArB,CAAuC;AACjEN,UAAAA,MAAM,EAAEA;AADyD,SAAvC,CAA9B;AAIA,eAAOK,iBAAiB,CAACF,WAAzB;AACH,OAND,MAMO;AACH,cAAMC,GAAN;AACH;AACJ;AACJ,GApBD;;AAsBA,QAAMvB,cAAc,GAAG,YAAY;AAC/B,UAAMsB,WAAW,GAAG,MAAMJ,cAAc,CAACzB,MAAM,CAAC0B,MAAR,CAAxC;AACAxB,IAAAA,OAAO,CAAC2B,WAAD,CAAP,CACKI,IADL,CACUC,MAAM,IACR5B,OAAO,CAAC4B,MAAD,CAFf;AAIH,GAND;;AAQA,sBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE3B,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAIH,CArED;;AAuEA,eAAeH,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { config } from './Config';\r\nimport { UserAgentApplication } from 'msal';\r\nimport { getUser } from './GraphService';\r\nimport { Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst User = () => {\r\n\r\n    const [users, setUser] = useState<any>();\r\n\r\n\r\n    useEffect(() => {\r\n        getUserService();\r\n    }, []);\r\n\r\n    const { values } = users;\r\n\r\n    console.log(value)\r\n    const userAgentApplication = new UserAgentApplication({\r\n        auth: {\r\n            clientId: config.appId,\r\n            redirectUri: config.redirectUri\r\n        },\r\n        cache: {\r\n            cacheLocation: \"sessionStorage\",\r\n            storeAuthStateInCookie: true\r\n        }\r\n    });\r\n\r\n    const isInteractionRequired = (error: Error): boolean => {\r\n        if (!error.message || error.message.length <= 0) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            error.message.indexOf('consent_required') > -1 ||\r\n            error.message.indexOf('interaction_required') > -1 ||\r\n            error.message.indexOf('login_required') > -1\r\n        );\r\n    }\r\n\r\n    const getAccessToken = async (scopes: string[]) => {\r\n\r\n        try {\r\n            var silentResult = await userAgentApplication.acquireTokenSilent({\r\n                scopes: scopes\r\n            });\r\n            return silentResult.accessToken;\r\n        } catch (err) {\r\n            // If a silent request fails, it may be because the user needs\r\n            // to login or grant consent to one or more of the requested scopes\r\n            if (isInteractionRequired(err)) {\r\n                var interactiveResult = await userAgentApplication.acquireTokenPopup({\r\n                    scopes: scopes\r\n                });\r\n\r\n                return interactiveResult.accessToken;\r\n            } else {\r\n                throw err;\r\n            }\r\n        }\r\n    }\r\n\r\n    const getUserService = async () => {\r\n        const accessToken = await getAccessToken(config.scopes);\r\n        getUser(accessToken)\r\n            .then(result =>\r\n                setUser(result)\r\n            );\r\n    }\r\n\r\n    return (\r\n        <Button onClick={getUserService}>click</Button>\r\n    );\r\n\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}